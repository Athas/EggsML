#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Hvor mange bitcoin kan du få for dine lommepenge?

import subprocess
import sys
import os
from functools import partial
import itertools
import random
import urllib2
import re
import xml.etree.ElementTree as ET
from lxml import html

def run_main(args):

    args = parseArgs(args)

    list = urllib2.urlopen("https://coinbase.com/charts")
    content = list.read()
    priceInUSD = content.split('Buy Price: $')[1].split('<')[0]
    priceInUSD = float(priceInUSD.replace(",","."))
    dollarkurz = dollarkurs()
    priceInDKK = priceInUSD * (dollarkurz / 100.0)
    try:
        antalBitcoin = args[2] / priceInDKK
    except TypeError:
        fejl()
        return


    user = os.getenv("EGGS_USER")
    if user is None:
        user = "min ven"
    tekst = "Tillykke " + user + ", du kan købe " + ('%.*f' % (4 + 1, antalBitcoin))[:-1]  + " bitcoin for dine penge."
    print tekst
    soed = "Husk altid at " + reminder() + ", inden du gør den slags :-)"
    print soed
    bitcoinAdvisor(priceInDKK)

def reminder():
    rms = ["spørge en voksen",
                "låne penge i banken" ,
                "slette din gamle bitcoin-tegnebog" ,
                "opsige dit job" ,
                "tale med en privatøkonom" ,
                "smile" ,
                "spørge om der er andre, som skal have noget med" ,
                "bitcoin er en boble" ,
                "vaske hænder"]
    rm = rms[random.randint(0, (len(rms) - 1))]
    return rm



def dollarkurs(valuta="USD"):
    page = urllib2.urlopen("http://valutakurser.dk").read()
    tree = html.fromstring(page)
    kurs = tree.xpath("//div[@id='" + valuta + "']/text()")[0]

    return float(kurs.replace(',','.'))



def parseArgs(args):

    try:
        assert (args[1] == "for" or args[3] == "kroner")
        args[2] = float(args[2])
    except ValueError:
        fejl()
        sys.exit(0)
    return args

def fejl():
    print "Brug 'bitcoin for <beløb> kroner'"

def bitcoinAdvisor(kronerPrBTC):
    oldPrice = float(subprocess.check_output(["dbRead", "bitcoin"]))
    subprocess.call(["echo " + str(kronerPrBTC) + " | dbWrite bitcoin"], shell=True)
    if oldPrice < kronerPrBTC:
        print "kursen er steget siden sidst, køb KØB KØØØØØØØØØØB!\n"\
              "Sidst var den jo " + str(kronerPrBTC) + " kroner pr. bitcoin."
    else: print "kursen er faldet siden sidst, SÆÆÆÆÆÆÆÆÆÆLG!\n"\
          "Den var tidligere " + str(kronerPrBTC) + " kroner pr. bitcoin,  så den falder nok endnu mere snart."





if __name__ == '__main__':
    run_main(sys.argv)
