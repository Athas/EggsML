#!/usr/bin/env perl
use 5.012;
use warnings;

=pod
Depends on: /home/concieggs/credentials/memegenerator.net
=cut

use utf8::all;
use IO::All -utf8;
use LWP::Simple;
use JSON;
use URI;
use Env qw/CONCIEGGS_DB_DIR/;

my ($USER, $PASS) = io("/home/concieggs/credentials/memegenerator.net")->slurp =~ /^(\w+):(\w+)$/;

my @lines = io("$CONCIEGGS_DB_DIR/fakta")->slurp;
my $query = join(" ", @ARGV);
@lines = grep { $_ =~ qr/$query/i } @lines;
@lines = grep { $_ =~ qr/^[^\.!\?:]+[\.!\?:](?<!\d\.) [^\.!\?:]+[\.!\?]?\s*$/ && length($_) < 150 } @lines;

my $line = $lines[rand @lines];

$line =~ tr/<>/()/;
my ($first, $second) = $line =~ qr/^([^\.!\?:]+[\.!\?:]) ([^\.!\?:]+[\.!\?]?)\s*$/;

my $page = int( rand() * 10 );

my $json = get("http://version1.api.memegenerator.net/Generators_Select_ByPopular?pageIndex=$page&pageSize=24&days=7"); 
my $mem = from_json($json);
print STDERR "$json\n" unless ($mem->{success});
$mem = $mem->{'result'};
$mem = $mem->[rand @$mem];

my $generator = $mem->{'generatorID'};
my ($imageid) = $mem->{'imageUrl'} =~ qr/(\d+)\.\w+$/;

my $url = "http://version1.api.memegenerator.net/Instance_Create";
my %params = ( username     => $USER,
               password     => $PASS,
               languageCode => 'en',
               generatorID  => $generator,
               imageID      => $imageid,
               text0        => $first,
               text1        => $second );
my $uri = URI->new($url);
$uri->query_form(%params);

$json = get($uri->as_string);
my $response = from_json($json);
print STDERR "$json\n" unless ($response->{success});
printf("%s\n", $response->{result}->{instanceImageUrl} // "Det gik galt.");
