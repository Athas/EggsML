#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Årets Spil 2014 - klappet og klart til julehandlen. 
# Prik til concieggs mellem en og fem gange! - 
# Men vær forsigtig. Pludselig eksploderer concieggs!
# Vinderen er den, som har prikket mest til concieggs, uden at udløse et raserianfald!
# SJOVT FOR ALLE MENNESKER I HELE VERDEN!

import subprocess
import sys
import os, time

from functools import partial
import itertools
import random
import re
import json
import operator

#ordbogens design:   {'forrigePrikker': <navn> , 'prikTilbage': <tal>, 'pointtavle': {navn:point}}


def getDict():
    oldDict = subprocess.check_output(["dbRead", "prikkeleg"])
    Dict    = json.loads(oldDict.decode('utf-8'))
    return Dict

def setDict(Dict):
    subprocess.call(["echo \'" + json.dumps(Dict, ensure_ascii=False) + "\' | dbWrite prikkeleg"], shell=True)

def currentUser():
    raw = os.getenv("EGGS_USER")
    return re.sub(" [\.;,\'\"] ", "", raw)



def run_main(args):
    antalPrik = parseArgs(args)
    try:
        Dict = getDict()
    except:
        nytSpil()
        sys.exit(0)

    if Dict['forrigePrikker'] == currentUser():
        print("%s! %s, du prikkede mig også sidst. Dit træk er ugyldigt!" % (svin(), currentUser()))
        subprocess.call("putInBadStanding " + currentUser(), shell=True)
        sys.exit(0)

    sys.stdout.flush()
    time.sleep(1)
    status = Dict['prikTilbage'] - antalPrik
    Dict['forrigePrikker'] = currentUser()
    if status <= 0:
        slutsekvens(currentUser(), Dict)
    Dict['prikTilbage'] = status
    try:
        Dict['pointtavle'][currentUser()] += antalPrik
    except KeyError:
        Dict['pointtavle'][currentUser()] = antalPrik
    setDict(Dict)
    hvemFoerer(Dict['pointtavle'], False)



def slutsekvens(taber, dict):
    dict['pointtavle'].pop(taber)
    print("%s, %s! Du prikkede det forkerte sted på det forkerte tidspunkt, og har dermed tabt!" % (svin(), taber))
    subprocess.call("putInBadStanding " + currentUser(), shell=True)
    sys.stdout.flush()
    time.sleep(1)
    hvemFoerer(dict['pointtavle'], True)


def hvemFoerer(dictionary, Vindersekvens=False):
    sorted_dict = sorted(dictionary.items(), key=operator.itemgetter(1))
    if sorted_dict == []:
        sorted_dict = [('concieggs', 'concieggs')]
    if Vindersekvens:
        vinder = sorted_dict[-1][0]
        print ("%s %s! Du har lige vundet i prikkeleg!! %s er den nye konge af #eggsml!" % (congrats() , vinder, vinder))
        subprocess.call(["randomName \'" + vinder + "\' | dbWrite eggsking"], shell=True)
        nytSpil()
        subprocess.call(["runcmd topic " + vinder + " er kongen"], shell=True)
        sys.exit(0)
    else:
        print("%s er i spidsen - %s, %s! Du kan sagtens nå det!" % (sorted_dict[-1][0], heppe(), sorted_dict[0][0]))

def nytSpil(M=15, N=30):
    dict = {'nudge': 'false', 'forrigePrikker': 'concieggs' , 'prikTilbage' : random.randint(M, N), 'pointtavle':{}}
    subprocess.call(["echo \'" + json.dumps(dict, ensure_ascii=False) + "\' | dbWrite prikkeleg"], shell=True)

def forfra(argument):
        mOgN = re.findall("[0-9]+", argument)
        try:
            assert len(mOgN) == 2
            M = int(mOgN[0])
            N = int(mOgN[1])
            if abs(M - N) < 9:
                print ("Hey allesammen! %s prøver på at starte en underlødig prikkeleg!" % (currentUser()))
                print ("Der var faktisk kun " + str(abs(M-N)) + " priks forskel på minimum og maximum, i det han prøvede på at starte. Er det ikke frækt?")
                subprocess.call(["runcmd topic " + currentUser() + " prikker falskt. Fy for skam."], shell=True)
		subprocess.call("putInBadStanding " + currentUser(), shell=True)
            if M < N:
                nytSpil(M,N)
            if M > N:
                nytSpil(N, M)
        except:
            print ("Brug korrekt syntaks: <tal>:<tal>")



def nudge():
    Dict = getDict()
    if Dict['nudge'] == "false":
        Dict['nudge'] = "true"
        Dict['prikTilbage'] += random.randint(3, 23)
        setDict(Dict)
        print ("Tak, %s. Nu har jeg det faktisk bedre. :-)" % (currentUser()))
    else:
        print ("Beklager, %s... " % (currentUser()))


def svin():
    grats = [
        "Så så man lige dig, hva'",
        "Pak sammen",
        "Lortesvin",
        "Du gør mig bare trist",
        "DNUR",
        "FØJ",
        "Dit skodøje",
        "Røvlort",
        "Dit fuckhoved",
        "Hvad bilder du dig ind?",
        "Din bøf"
    ]
    return grats[random.randint(0, len(grats)-1)]


def congrats():
    grats = [
        "Tillykke",
        "Novra",
        "Vildt,",
        "Sikke noget,",
        "Godt gået,",
        "Tjullahop,",
        "Super fedest,"
    ]
    return grats[random.randint(0, len(grats)-1)]

def heppe():
    grats = [
        "Heja",
        "Fremad",
        "Kom igen",
        "Op med modet",
        "Frem med humøret",
        "Nu gælder det",
        "Nu handler det om at se fremad",
        "Bare rolig"
    ]
    return grats[random.randint(0, len(grats)-1)]

def help():
    print (""" Årets Spil 2014 - klappet og klart til julehandlen.
         Prik til din concieggs mellem en og fem gange! -
         Men vær forsigtig. Pludselig eksploderer din concieggs!
         Vinderen er den, som har prikket mest til sin concieggs, uden at udløse et raserianfald!
         SJOVT FOR ALLE MENNESKER I HELE VERDEN!\n\n\n
         -forfra M:N starter prikkelegen forfra, med en prikketolerance på mellem M og N prik.
         -trøst trøster din concieggs, så din concieggs får det lidt bedre igen.
         -smugkig gør ikke noget? """)



def parseArgs(args):

    if len(args) == 1:
        help()
        sys.exit(0)
    if args[1] == "-hjælp":
        help()
        sys.exit()
    if args[1] == "-forfra":
        forfra(args[2])
        sys.exit(0)

    if args[1] == "-trøst":
        nudge()
        sys.exit(0)

    if args[1] == "-smugkig":
        sys.exit(0)

    antalPrik = 0
    for arg in args:
        if arg.lower() in ["prikke", "prik"]:
            antalPrik += 1
    if not (antalPrik < 6 and antalPrik > 0):
        print("Prik mellem én og fem gange, eller kør prikkeleg -hjælp.")
        sys.exit(0)
    return antalPrik


if __name__ == '__main__':
    run_main(sys.argv)
