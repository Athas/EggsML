#!/bin/sh
#
# Spørg om din gæld til frokostkassen, eller få hjælp til diverse
# personlighedsfremmende gøremål.  Brug naturligt sprog.
eval "$(echo "$@" | parse 'skylder (?<debtor>[^ ]+)$|'\
'har (?<debtor>[^ ]+) til gode$|'\
'spiller de( [^ ]+)? (på|hos|ved|i) (?<channel>.+)$|'\
'(?<whatis>er (?<subject>.+))$|'\
'(?<missing>mangler jeg)$|'\
'(?<wtf>hulen)$|'\
'(?<status>så)$|'\
'(?<definition>betyder (?<word>[^ ]+))$|'\
'(?<meaning>mener (?<who>[^ ]+) med (?<what>[^ ]+)$)|'\
'hedder (?<githubname>[^ ]+) på GitHub|'\
'sker der i (?<kodeprojekt>[^ ]+)[ -]land|'\
'(?<version2>((?:hulen|satan) )?sker der (lige (nu )?)?(på|for) (det dersens )?([Vv]ersion2|v2)(\.dk)?)|'\
'(?<happening>(sker der( lige)?|mener du))|'\
'(?<kingname>hedder kongen)|'\
'(står (?<forkortelse>[^ ]+) for)')"

if [ "$whatis" ]; then
  eval "$(echo "$subject" | parse '(?<betalingsbalancen>betalingsbalancen)|(?<klokken>klokken)|(?<yourproblem>dit problem(?: med (?<problem>.+))?$)')"

  if [ "$betalingsbalancen" ]; then
    balance="$(lookupBalance)"
    if [ "$(echo "$balance" | grep "-")" ]; then
        echo "Uha, samlet set er der en gæld på $balance kroner."
    else
        echo "Spiser I slet ingen ting? EggsML har et samlet overskud på $balance kroner."
    fi
    exit

  elif [ "$klokken" ]; then
    echo "Den lille viser peger på $(($(date +%l) % 12)), den store på $(($(date +%M))), og den helt lille på $(($(date +%S)))."
    exit
  elif [ "$yourproblem" ]; then
    githubIssue "$problem"
    exit
  else
    runcmd jeopardy "hvad er $subject"
    exit
  fi
fi

if [ "$channel" ]; then
    runcmd alfa "$channel"
    exit
fi

if [ "$debtor" ]; then
    if [ "$debtor" = "jeg" ]; then
        alias=$(randomName "$EGGS_USER")
    else
        alias=$(randomName "$debtor")
    fi
    if [ ! "$alias" ]; then
        echo "Jeg kender ikke $debtor."
        exit
    fi


    debt="$(lookupDebt "$alias")"

    if [ "$debt" ]; then
        if [ "$(echo "$debt" | grep "-")" ]; then
            echo "$alias har $(echo $debt | sed 's/-//') kr. til gode i frokostkassen!"
        else
            wish=$(eggstool wishes | randomLine)
            wish_str=""
            if [ "$wish" ]; then
                wish_str=" $(Du $alias Vedkommende) kunne overveje at købe $wish."
            fi
            echo "$(Du $alias) skylder $debt kr. til frokostkassen! $wish_str"
        fi
    else
        echo "Fejl ved beregning af gæld for $alias"
    fi
elif [ "$time" ]; then
    echo "Den lille viser peger på $(($(date +%l) % 12)), den store på $(($(date +%M))), og den helt lille på $(($(date +%S)))."
elif [ "$happening" ]; then
     echo -n "$EGGS_USER: "
     (echo "Ja, det må du nok sige."
      echo "Verden er af lave."
      echo "Det var aldrig sket førhen."
      echo "Og hvor er politikerne, må man spørge!"
      echo "Det hører ingen steder hjemme."
     ) | randomLine
elif [ "$status" ]; then
        reaktion
elif [ "$definition" ]; then
    description="$(lookupDanishWord "$word")"
    if [ "$description" ]; then
        echo "$EGGS_USER: Det betyder blandt andet det her:"
        echo "$description" | randomLine
    else
        randomLine <<EOF
$EGGS_USER: Ingen ved hvad dét betyder.
Er det overhovedet et ord, $EGGS_USER?
Hmm, $EGGS_USER, det ved jeg desværre ikke.
$EGGS_USER, jeg har ikke lige nogen definition på det ord.
EOF
    fi
elif [ "$missing" ]; then
    echo "Du mangler $(randomLine < "$CONCIEGGS_DB_DIR/ordbog-dansk-navneord")!"
elif [ "$wtf" ]; then
    behaviour=$(dbRead outfilter_command)
    user_behaviour=$(dbRead "outfilter_command_$EGGS_USER")
    channel_behaviour=$(dbRead "outfilter_command_$(ircChannel)")
    if [ "$user_behaviour" = "$channel_behaviour" ]; then
        unset $channel_behaviour
    fi
    if [ "$behaviour" ]; then
        echo -n "Mit kulturelle islæt er $behaviour.  "
        if [ "$user_behaviour" ]; then
            echo "Men for din skyld er jeg også $user_behaviour."
        elif [ "$channel_behaviour" ]; then
            echo "Men i disse kamre forsøger jeg passe ind ved $channel_behaviour."
        else
            echo
        fi
    elif [ "$user_behaviour" ]; then
        echo "$EGGS_USER: Som forespurgt, så behandles du efter normerne for $user_behaviour."
    elif [ "$channel_behaviour" ]; then
        echo "$EGGS_USER: Skik følge eller land fly, og i dette land er normen $channel_behaviour."
    else
        echo "$EGGS_USER: Hvad er det helt præcist, der forvirrer dig?  Min adfærd er ganske konventionel."
    fi
    exit
elif [ "$meaning" ]; then
    if [ "$who" = du -o "$who" = "$irc_username" ]; then
        runcmd hjælp "$what"
    else
        if [ "$who" = jeg ]; then
            alias=$(randomName "$EGGS_USER")
        else
            alias=$(randomName "$who")
        fi
        if [ ! "$alias" ]; then
            echo "$EGGS_USER: '$who' er ikke at finde i logeprotokollen."
            exit
        fi
        cmdalias=$(cmdAlias "$alias" "$what")
        if [ "$cmdalias" ]; then
            if [ "$who" = jeg ]; then
                echo "$EGGS_USER: Med '$what', regner jeg naturligvis med at du mener '$cmdalias'."
            else
                echo "$EGGS_USER: Skulle $alias ytre '$what', så antager jeg naturligvis at han mener '$cmdalias'."
            fi
        else
            echo "$EGGS_USER: Ganske som det står skrevet."
        fi
    fi
elif [ "$githubname" ]; then
    if [ "$githubname" = jeg ]; then
        name=$(dbUserRead "$EGGS_USER" githubname)
        if [ "$name" ]; then
            echo "$EGGS_USER: $(Du "$EGGS_USER") hedder sørme '$name'!"
        else
            echo "$EGGS_USER: $(Du "$EGGS_USER") hedder da vist ikke noget.  Fortæl mig det med 'jeg hedder NAVN på GitHub'."
        fi
    else
        name=$(dbUserRead "$githubname" githubname)
        if [ "$name" ]; then
            echo "$EGGS_USER: $(randomName "$githubname") hedder sørme '$name'!"
        else
            echo "$EGGS_USER: $(randomName "$githubname") ser ikke ud til at hedde noget."
        fi
    fi
elif [ "$kingname" ]; then
    name="$(dbRead eggsking)"
    kingname="$(dbRead eggskingname)"

    if [ "$name" ] && [ "$kingname" ]; then
        echo "$EGGS_USER: Kongens royale navn er naturligvis HKH ${kingname}, også kendt under det borgerlige navn $(randomName "$name")!"
    else
        echo "$EGGS_USER: Gisp, det ser ikke ud til at HKH har noget royalt navn!"
    fi
elif [ "$forkortelse" ]; then
    ordene="$(falskForkortelse $forkortelse)"
    randomLine <<EOF
$EGGS_USER: $forkortelse står da vist for $ordene.
$forkortelse, $EGGS_USER?  Det er helt sikkert $ordene!
Den er nem, $EGGS_USER, for $forkortelse er bare kort for $ordene.
EOF
elif [ "$kodeprojekt" ]; then
    latestGitNews "$kodeprojekt"
elif [ "$version2" ]; then
    version2Debat | {
        read author
        read title
        read summary_line
        read url
        HvadSoeren=$(randomLine <<EOF
Hvad søren
Vilde milde
Jeg ved ikke hvad jeg skal sige
Så for den da
Uha og lala
Ajajaij
EOF
                  )
        etDebatindlaeg=$(randomLine <<EOF
et debatindlæg
en rant
noget prut
noget tankevækkende
en kommentar
efterfølgeren til Magna Carta
sit livsværk
et sandt svendestykke
EOF
)
        echo "$EGGS_USER: $HvadSoeren, $author har skrevet $etDebatindlaeg med titlen \"$title\" på $url hvor der blandt andet står:"
        echo '"'"$summary_line"'"'
    }
else
    randomLine <<EOF
$EGGS_USER: Hmm, det er e$(tPattedyr).
$EGGS_USER: E$(tPattedyr) så vidt jeg ved.
Måske e$(tPattedyr), $EGGS_USER?
Den er svær, $EGGS_USER, men det minder mig om dengang med $(frase bestemt).
$EGGS_USER: Det er $(frase ubestemt).
EOF
    exit
fi
