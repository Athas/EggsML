#!/bin/sh

set -e # Die on error

if [ $# -lt 1 ]; then
    echo "Usage: $0 <srcfile> [args...]"
    exit 1
fi

srcfile=$(find $CONCIEGGS_DIR/compiled -name "$(basename "$1").*")

if ! [ "$srcfile" ]; then
    echo "$0: cannot find source for program '$(basename "$1")'" >&2
    exit 3
fi

shift

compiledfile=$CONCIEGGS_DB_DIR/compiled-cache/$(basename "$srcfile" | sed 's/\.[^.]*$//')

if [ "$compiledfile" -nt "$srcfile" ]; then
    "$compiledfile" "$@"
else
    case $srcfile in
        *go)
            compile() {
		export GOPATH=$CONCIEGGS_DIR/compiled:$CONCIEGGS_LIB_DIR/golangbiblioteggs
                go build $1 >&2
            }
            ;;
        *c)
            compile() {
                gcc -std=c99 $1 -o $2
            }
            ;;
        *sml)
            compile() {
                mosmlc -P full -toplevel -o $2 $1
            }
            ;;
        *pas)
            compile() {
                fpc $1 -o"$2" 2> /dev/null > /dev/null
            }
            ;;
        *hs)
            compile() {
                ghc "$1" -o "$2" -i"$CONCIEGGS_DIR/compiled:$CONCIEGGS_LIB_DIR/haskeggs" >&2
            }
            ;;
        *kex)
            compile() {
                repg compile "$1" --srcout "$1.c" >&2
                gcc -o "$2" -O3 -xc -D FLAG_WORDALIGNED -w "$1.c" >&2
            }
            ;;
        *)
            echo "Cannot compile file $srcfile - unknown extension."
            exit 2
    esac

    compiledir="$(mktemp -d)"
    cp "$srcfile" "$compiledir"
    srcfile="$compiledir/$(basename "$srcfile")"

    mkdir -p "$CONCIEGGS_DB_DIR/compiled-cache"
    if (cd "$CONCIEGGS_DB_DIR/compiled-cache";
        compile "$srcfile" "$compiledfile"); then
        rm -r "$compiledir"
        "$compiledfile" "$@" || true # Midlertidigt fiks for ghc
        # runtime-problemer p√• OpenBSD.
    else
        rm -r "$compiledir"
        exit 1
    fi
fi
