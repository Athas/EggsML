#!/usr/bin/env perl
use 5.020;
use warnings;
use utf8::all;

use Mojo::UserAgent;
use Mojo::Util qw/trim/;

my $ua = Mojo::UserAgent->new;
$ua->transactor->name('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36');
$ua->max_redirects(5);

my %news_sites = (
    ekstrabladet => sub {
        my $dom = $ua->get('https://www.ekstrabladet.dk')->result->dom;
        my @articles = $dom->find('.df-article')->map('all_text')->each;
        return @articles;
    },
    bt => sub {
        my $dom = $ua->get('http://bt.dk')->result->dom;
        my @articles = $dom->find('.bt-link')->map('all_text')->each;
        return @articles;
    },
    dr => sub {
        my $dom = $ua->get('https://www.dr.dk/nyheder/allenyheder/')->result->dom;
        my @articles = $dom->find('article h3 a')->map('all_text')->each;
        @articles = map { s/(\p{Uppercase}{3,})\b/$1:/r } @articles;
        return @articles;
    }
);

sub normalize {
    my $text = shift;
    $text =~ s/\s+/ /g;

    return trim($text);
}

sub get_results {
    my $name = shift;

    my @results = grep { $_ } map { normalize($_) } $news_sites{$name}->();
    unless (@results) {
        die("Kunne ikke finde nyheder hos $name");
    }
    say $_ for @results;
}

sub random_site {
    my @names = keys %news_sites;
    return $names[rand()*@names];
}

get_results($ARGV[0] // random_site);
